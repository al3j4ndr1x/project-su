# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1 # use CircleCI 2.1
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/node:10-browsers
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: Code Has Arrived
          command: |
            ls -al
            echo '^^^That should look familiar^^^'
      - run:
          name: Running in a Unique Container
          command: |
            node -v
      - run:
          name: Updating npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: v1-npm-deps-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Installing dependencies with npm
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: v1-npm-deps-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - /node_modules
      #- run:
      #    name: Running Jest tests with npm
      #    command: npm test
      - run:
          name: "Run Jest and Collect Coverage Reports"
          command: npm run test:cov
      - store_test_results:
          path: coverage
      - store_artifacts:
          path: coverage

# Orchestrate or schedule a set of jobs, see https://circleci.com/docs/2.0/workflows/
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
        #  filters:  # using regex filters requires the entire branch to match
        #    branches:
        #      only:  # only branches matching the below regex filters will run
        #        - master
      #- test:
      #    requires:
      #      - build
